name: Deploy Azure CLI Pwsh FunctionApp

on:
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read
  
jobs:
  getazcli:
    runs-on: windows-2022
    needs: [deployInfra]
    steps:
      - name: Check Azure CLI version
        run: az --version
      - name: Zip Azure CLI directory
        run: Compress-Archive "C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2" c:\AZCLI.zip
      - name: Verify zip
        run: test-path c:\AZCLI.zip
      - name: Optionally store as an artifact
        if: false
        run: echo "This could take a lot of space, better to upload directly to storage"
      - name: Copy file to storage
        if: false
        run: azcopy --version
        
  deployInfra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Az CLI login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Infrastructure
        run: |
          DEP=$(az deployment group create -g ${{ vars.RG }} -f infra/main.bicep -p environmentName=anenv)
          OUTPUTS=$(echo $DEP | jq -r '.properties.outputs | with_entries( .key |= ascii_downcase)')
          echo $OUTPUTS
          echo $OUTPUTS | jq -r '.service_api_name.value'
      - name: Capture outpits
        run: echo fnAppName, StorageAccountName,
  deployAppCode:
    runs-on: ubuntu-latest
    needs: [deployInfra]
    steps:
      - uses: actions/checkout@v3
      - name: Install Functions core tools
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
          sudo apt-get update
          sudo apt-get install azure-functions-core-tools-4
      - name: Zip up app code
        run: zip -r fnAppCode.zip ./src/app/
      - name: Az CLI login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to FunctionApp
        env: 
          functionAppName: func-azcliappilfvus4hrhwoo
        run: |
          cd src/app
          func azure functionapp publish $functionAppName
        
